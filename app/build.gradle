import dependencies.Deps

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
apply plugin: 'androidx.navigation.safeargs.kotlin'

allOpen {
    annotation 'ss.wallpad.testing.OpenClass'
}

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "ss.wallpad"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "ss.wallpad.runner.WallPadTestRunner"
        testInstrumentationRunnerArguments clearPackageData: "true"
    }

    def keys = new Properties()
    def keysFile = rootProject.file('keys.properties')
    if (!keysFile.exists()) {
        new File(keysFile.getPath()).text = "bingDebugKey=\"YOUR_DEBUG_KEY\"\nbingReleaseKey=\"YOUR_RELEASE_KEY\""
    }
    keysFile.withInputStream { stream -> keys.load(stream) }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            buildConfigField 'String', 'SUBSCRIPTION_KEY', keys['bingDebugKey']
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'SUBSCRIPTION_KEY', keys['bingReleaseKey']
        }
    }

    sourceSets {
        def sharedTestDir = 'src/sharedTest/java'
        test.java.srcDirs += sharedTestDir
        androidTest.java.srcDirs += sharedTestDir
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues true
    }
}

// kotlin android extensions @Parcelize support
androidExtensions {
    experimental = true
}

dependencies {
    implementation Deps.Kotlin.stdlib

    implementation Deps.AndroidX.appcompat
    implementation Deps.AndroidX.coreKtx
    implementation Deps.AndroidX.lifecycleExtensions
    kapt Deps.AndroidX.lifecycleCompiler
    implementation Deps.AndroidX.navigationRuntimeKtx
    implementation Deps.AndroidX.navigationFragmentKtx
    implementation Deps.AndroidX.navigationUiKtx

    implementation Deps.Glide.glide
    implementation Deps.Glide.annotations
    implementation Deps.Glide.okhttp3Integration
    kapt Deps.Glide.compiler

    implementation Deps.photoView

    implementation Deps.Dagger.dagger
    kapt Deps.Dagger.compiler
    kaptTest Deps.Dagger.compiler
    kaptAndroidTest Deps.Dagger.compiler
    implementation Deps.Dagger.android
    implementation Deps.Dagger.androidSupport
    kapt Deps.Dagger.androidProcessor
    kaptTest Deps.Dagger.androidProcessor
    kaptAndroidTest Deps.Dagger.androidProcessor

    implementation Deps.Retrofit.retrofit
    implementation Deps.Retrofit.converterMoshi

    implementation Deps.moshi

    debugImplementation Deps.Test.fragmentTesting
    debugImplementation Deps.Test.coreKtx

    testImplementation Deps.Test.archCoreTesting
    testImplementation Deps.Test.androidJunit
    testImplementation Deps.Test.runner
    testImplementation Deps.Test.espressoCore
    testImplementation Deps.Test.espressoContrib
    testImplementation Deps.Test.junit
    testImplementation Deps.Retrofit.retrofitMock
    testImplementation Deps.Test.mockitoCore
    testImplementation Deps.Test.robolectric
    testImplementation Deps.Test.robolectricAnnotations

    androidTestUtil Deps.Test.orchestrator
    androidTestImplementation Deps.Test.androidJunit
    androidTestImplementation Deps.Test.runner
    androidTestImplementation Deps.Test.espressoCore
    androidTestImplementation Deps.Test.espressoContrib
    androidTestImplementation Deps.Retrofit.retrofitMock
    androidTestImplementation Deps.Test.mockitoAndroid
    androidTestImplementation Deps.Test.robolectricAnnotations
}
